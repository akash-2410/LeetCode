--------------------------------------------------------------------------------------------------Question---------------------------------------------------------------------------------------------------------
Given the root of a binary tree, return the length of the diameter of the tree.

The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

The length of a path between two nodes is represented by the number of edges between them.

--------------------------------------------------------------------------------------------------Example---------------------------------------------------------------------------------------------------------
Example 1:
Input: root = [1,2,3,4,5]
Output: 3
Explanation: 3 is the length of the path [4,2,1,3] or [5,2,1,3].

Example 2:
Input: root = [1,2]
Output: 1
--------------------------------------------------------------------------------------------------Intution---------------------------------------------------------------------------------------------------------
Initialize a variable diameter to store the maximum diameter of the binary tree.
Define a helper function diameterHelper that takes a tree node as input and returns an integer array. The first element of the array represents the height of the left subtree,
the second element represents the height of the right subtree, and the third element represents the diameter of the subtree rooted at the input node.
In the diameterHelper function, if the input node is null, return an array with all elements as -1.
Recursively calculate the height and diameter of the left subtree and the right subtree.
Update the diameter variable with the maximum of the current diameter and the sum of the heights of the left and right subtrees.
Return an array with the height of the left subtree, the height of the right subtree, and the diameter of the subtree rooted at the input node.
Call the diameterHelper function with the root node as input and store the result in a variable.
Return the maximum diameter value from the result array.
--------------------------------------------------------------------------------------------------Code------------------------------------------------------------------------------------------------------------
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        if (root == null)
            return 0;

        int[] result = { Integer.MIN_VALUE };
        diameter(root, result);

        return result[0];
    }

    private int diameter(TreeNode root, int[] result) {
        if (root == null)
            return 0;

        int left = diameter(root.left, result);
        int right = diameter(root.right, result);

        result[0] = Math.max(result[0], left + right);

        return Math.max(left, right) + 1;
    }
}
