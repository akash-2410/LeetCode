---------------------------------------------------------------------------------------------------Question--------------------------------------------------------------------------------------------------------
Given an integer n, return true if it is a power of two. Otherwise, return false.

An integer n is a power of two, if there exists an integer x such that n == 2x.
---------------------------------------------------------------------------------------------------Example--------------------------------------------------------------------------------------------------------

Example 1:
Input: n = 1
Output: true
Explanation: 20 = 1

Example 2:
Input: n = 16
Output: true
Explanation: 24 = 16

Example 3:
Input: n = 3
Output: false

---------------------------------------------------------------------------------------------------Approach 1 & Code ----------------------------------------------------------------------------------------------
(And Operator)
And operation between multiple of 2 and next lower number will always give 0 and other wise it will never be 0.
example 1: 8 & 7
1000(8) & 0111(7) => 0000(0)

example 1: = 10 & 9
1010(10) & 1001(9) => 1000(8)

Time complexity:
O(1)

Space complexity:
O(1)

Code
public class Solution {
    public boolean isPowerOfTwo(int n) {
        return (n > 0) && ((n & (n - 1)) == 0);
    }
}

---------------------------------------------------------------------------------------------------Approach 2 & Code ---------------------------------------------------------------------------------------------
(Using Power Function)

Generating all possible numbers in the range.
Using pow() function for calculating power of 2.
If n is equal to ans, return true else will return false after the loop end.

Time complexity:
O(1)

Space complexity:
O(1)

Code
public class Solution {
    public boolean isPowerOfTwo(int n) {
        for (int i = 0; i < 31; i++) {
            int ans = (int) Math.pow(2, i);
            if (ans == n) {
                return true;
            }
        }
        return false;
    }
}






